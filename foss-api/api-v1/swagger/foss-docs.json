{
    "swagger": "2.0",
    "info": {
        "title": "EgyptFOSS API",
        "version": "0.1"
    },
    "paths": {
        "/badges/unnotified": {
            "get": {
                "tags": [
                    "Badges"
                ],
                "summary": "get unnotified badges by user",
                "description": "get unnotified badges by user to display an alert for the user with new earned badges",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to return list of unnotified badges <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get un notified badges by user"
                    },
                    "404": {
                        "description": "Not User"
                    }
                }
            }
        },
        "/badges": {
            "get": {
                "tags": [
                    "Badges"
                ],
                "summary": "get all system badges",
                "description": "get all system badges data",
                "responses": {
                    "200": {
                        "description": "return system badges"
                    }
                }
            }
        },
        "/collaboration/shared/": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "List shared documents with a certain user",
                "description": "List shared documents with a certain user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list shared documents<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List shared documents"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/spaces/": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "List spaces with a certain user",
                "description": "List spaces with a certain user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user spaces<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List spaces"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Create space",
                "description": "Create a new space with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to create new space<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Space Title <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "space added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/spaces/{space_id}/documents": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "List space documents with a certain user",
                "description": "List space documents with a certain user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user documents<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "space_id",
                        "in": "path",
                        "description": "Space ID to list documents inside <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List space documents"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/spaces/{space_id}/documents/": {
            "post": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Creates document in space",
                "description": "Create a new document with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to create new document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Document Title <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/>2. Unique within same space <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Document Content <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "space_id",
                        "in": "path",
                        "description": "Space ID to store the document to (must be shared with you or created by you) <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "document added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/documents/{document_id}": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "get document with a certain user",
                "description": "get document with a certain user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to get a document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "document_id <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get document"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Edit a document",
                "description": "Edit a document with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to edit a document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "Document ID returned from list of documents <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Document Title <br/><b>Validations: </b><br/> 1. Contains at least 1 character<br/>2. Unique within same space <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Document Content <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "Revision Status <br/> <b>Values</b> <br/>1. draft<br/>2.reviewed<br/>3.published<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "section",
                        "in": "formData",
                        "description": "Section to show in the system in case document is published only. <br/> <b>Values</b> One of predefined sections in system data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "document edited successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/share-settings/users/{item_id}": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "List invited users with certain roles on specific item (space or document) by ID",
                "description": "List invited users with certain roles on specific item (space or document) by ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list invited users on space/document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents (space or document) ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Invited Users"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Invite User to contribute on an space or document",
                "description": "Invite User to contribute on an space or document <br/> List of error codes: <br/> 1001 -> username key not passed <br/> 1002 -> permission key not passed <br/> 1003 -> permissin not valid<br/> 1004 -> user not found<br/> 1005 -> space/document owner can't be invited<br/> 1006 -> user already invited to this space/document<br/> 1007 -> user of role subscriber can't be invited to a space/document<br/> 1008 -> user of role contributor or subscriber can't be invited to a space/document as publisher",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to invite users on space/document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents (space or document) ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invitees",
                        "in": "formData",
                        "description": "json array of 2 keys (username and permission), and permission should be one of (editor,reviewer,publisher) <br/> <b>Values: </b> [{\"username\":\"EgyptFOSS\",\"permission\":\"editor\"},{\"username\":\"EgyptFOSS-1\",\"permission\":\"publisher\"}]<br/>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "document added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Deletes User Permission on specified item (space or document)",
                "description": "Deletes User Permission on specified item (space or document)",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to delete user permission on space/document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents (space or document) ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "username of invited user in the system <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/collaboration/share-settings/groups/{item_id}": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "list shared group like user subtype, technologies, theme, interests by item",
                "description": "list shared group like user subtype, technologies, theme, interests by item",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list shared group conditions on space/document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents (space or document) ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List shared groups"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "share item(space or document) based on group like user subtype, technologies, theme, interests",
                "description": "share item(space or document) based on group like user subtype, technologies, theme, interests",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to invite users by group on space/document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents (space or document) ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Specify Type <br/><b>Values:</b>Individual or Entity",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "formData",
                        "description": "Specify Sub-type <br/><b>Values:</b>One of predefined sub-types in system data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Theme <br/><b>Values: </b> term_id",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "share setting saved"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/published/": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "List published documents with a certain user",
                "description": "List published documents with a certain user",
                "parameters": [
                    {
                        "name": "section",
                        "in": "query",
                        "description": "you can leave it blank to retrieve all published documents",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List published documents"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/valid-users/{item_id}/": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "List available users to invite on a space or document",
                "description": "List available users with their username and profile picture",
                "parameters": [
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents (space or document) ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "pass display name as filter<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List avaolable users"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/spaces/delete/{item_id}": {
            "delete": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Deletes a space and its documents",
                "description": "Deletes a space and its documents  by passing the owner of the space and id of space",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to delete a space and documents inside<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents space ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/collaboration/documents/delete/{item_id}": {
            "delete": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "Deletes document",
                "description": "Deletes a document by passing the owner of the document and id of document",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to delete a document<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "item_id represents document ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/collaboration/published/documents/{document_id}": {
            "get": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "get published document with a certain user",
                "description": "get published document with a certain user",
                "parameters": [
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "document_id <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get document"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/collaboration/spaces/{item_id}": {
            "put": {
                "tags": [
                    "Collaboration Center"
                ],
                "summary": "edit space",
                "description": "rename an exist space with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to edit a space<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Space Title <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "Space ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "space edited successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/wiki/{language}/pages/{pageName}": {
            "get": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Finds Wiki Page",
                "description": "Get a page by its name from either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "description": "Page Name [case insensetive] <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "textFormat",
                        "in": "query",
                        "description": "Return Format <br/> <b>Values:</b> wiki or html [wiki by default]",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "wiki page returned successfully Or Validation Error"
                    },
                    "404": {
                        "description": "Wiki page not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Updates Wiki Page",
                "description": "Update a new wiki page with passed content in either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to edit a wiki page<br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "description": "Page Name [case insensetive] <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageContent",
                        "in": "formData",
                        "description": "Page Content in wiki style format<br/> <b>[Required]</b>",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns successful message if added"
                    },
                    "404": {
                        "description": "wiki page not found"
                    },
                    "422": {
                        "description": "invalid access token"
                    }
                }
            }
        },
        "/wiki/{language}/pages/{pageName}/versions": {
            "get": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Finds Wiki Page Versions",
                "description": "Get the history of a page by its name from either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "description": "Page Name [case insensetive] <br/> <b>[Required]</b>",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "History of wiki page returned successfully"
                    },
                    "404": {
                        "description": "Wiki page not found"
                    }
                }
            }
        },
        "/wiki/{language}/pages/{pageName}/versions/{versionNumber}": {
            "get": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Finds a Version of Wiki Page",
                "description": "Get a specific version of a page by its name and revision number from either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "description": "Page Name [case insensetive] <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "versionNumber",
                        "in": "path",
                        "description": "Version Number returned from Finds Wiki Page Versions <br/> <b>[Required]</b>",
                        "type": "integer"
                    },
                    {
                        "name": "textFormat",
                        "in": "query",
                        "description": "Return Format <br/> <b>Values:</b> wiki or html [wiki by default]",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns a specific version for a wiki page or validation error"
                    },
                    "404": {
                        "description": "Wiki page not found or wiki revision not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Reverts wiki page to a revision",
                "description": "Revert wiki page to a specific version in either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to revert a wiki page<br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "description": "Page Name [case insensetive] <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "versionNumber",
                        "in": "path",
                        "description": "Version Number returned from Finds version of wiki page <br/> <b>[Required]</b>",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns successful message if added"
                    },
                    "404": {
                        "description": "wiki page not found"
                    },
                    "422": {
                        "description": "invalid access token"
                    }
                }
            }
        },
        "/wiki/{language}/pages": {
            "post": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Creates Wiki Page",
                "description": "Create a new wiki page with passed name and content in either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to create a new wiki page<br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageName",
                        "in": "formData",
                        "description": "Page Name [case insensetive] <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "pageContent",
                        "in": "formData",
                        "description": "Page Content in wiki style format<br/> <b>[Required]</b>",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns successful message if added"
                    },
                    "422": {
                        "description": "invalid access token"
                    }
                }
            }
        },
        "/wiki/{language}/files": {
            "post": {
                "tags": [
                    "FOSSPedia"
                ],
                "summary": "Uploads a new image on wiki",
                "description": "Uploads new image in either english or arabic wiki based on the passed language",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to upload new wiki image<br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "path",
                        "description": "Wiki Page language <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "fileName",
                        "in": "formData",
                        "description": "File name to upload <br/> <b>[Required]</b>",
                        "type": "string"
                    },
                    {
                        "name": "uploadedFile",
                        "in": "formData",
                        "description": "File to upload <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns successful message if added"
                    }
                }
            }
        },
        "/search/{post_type}/{search_keyword}/": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "List Published Posts depending on Search Keyword entered",
                "description": "List Published POsts depending on post type and Search Keyword entered also search semantically and return set of data to render",
                "parameters": [
                    {
                        "name": "post_type",
                        "in": "path",
                        "description": "Leave it blank to get data from all types or Define Type to search in <b>Values: </b> any of <br/> 1.news <br/>2.product<br/>3.tribe_events<br/>4.request_center<br/>5.collaboration-center<br/>6.open_dataset<br/>7.success_story<br/>8. wiki<br/>9.people<br/>10. organizations<br/>11. expert_thought<br/>12.service<br/>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search_keyword",
                        "in": "path",
                        "description": "Keyword needed to search for <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List posts related to search keyword and type"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "tags": [
                    "FOSS Map"
                ],
                "summary": "List All Locations",
                "description": "Return all locations in the system per type",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of the locations to retreive<br/> <b>Values: </b><br/> 1.Event<br/>2.Individual<br/>3.Entity<br/> default: Entity<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "badge",
                        "in": "query",
                        "description": "Badge id<br/> <b>Values: </b> saved badges ids",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sub_type",
                        "in": "query",
                        "description": "Locations sub type based on the type selected<br/> <b>Values: </b> sub-types selected from setup data",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "query",
                        "description": "Theme English or Arabic name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "query",
                        "description": "Technology name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "query",
                        "description": "Interest name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of locations"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "FOSS Map"
                ],
                "summary": "Add or Update user location on FOSS Map",
                "description": "Saves the given Latitude and Longitude on success",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add/update location<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Type of the location<br/><b>Values:</b> user <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lat",
                        "in": "formData",
                        "description": "User Location lat<br/><b>Validations: </b><br/> 1. Numeric<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lng",
                        "in": "formData",
                        "description": "User Location lng<br/><b>Validations: </b><br/> 1. Numeric<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit user profile"
                    }
                }
            }
        },
        "/location/me": {
            "get": {
                "tags": [
                    "FOSS Map"
                ],
                "summary": "Retrieves the location of the user on FOSS Map",
                "description": "Returns the Latitude and Longitude on success",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to find user location<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve user location"
                    }
                }
            }
        },
        "/activist-center": {
            "get": {
                "tags": [
                    "Activist Center"
                ],
                "summary": "List top users ordered by points",
                "description": "List top users ordered by points,gained from posting posts and badges",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Users"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Register & Login"
                ],
                "summary": "Login",
                "description": "login user by username and password",
                "parameters": [
                    {
                        "name": "userLogin",
                        "in": "formData",
                        "description": "Username used while user registration <br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Password used while user registration <br/><b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful login"
                    }
                }
            }
        },
        "/login/social": {
            "post": {
                "tags": [
                    "Register & Login"
                ],
                "summary": "Social Login",
                "description": "login user by his social network account",
                "parameters": [
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "Social media identifier provided from each social media<br/><b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "provider",
                        "in": "formData",
                        "description": "Set provider to be one of these<br/><b>Values:</b><br/> 1.Facebook<br/>2.Twitter<br/>3.LinkedIn<br/>4.Google<br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "Please enter your username that will be used as your name in the system<br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Please type your email to be saved in the system<br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "emailVerified",
                        "in": "formData",
                        "description": "Provides if the email is verified from social media or not verified<br/><b>Values:</b><br/>yes or no and default is no<br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "photourl",
                        "in": "formData",
                        "description": "Set a photoUrl to set as your photo in the system",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Register & Login"
                ],
                "summary": "Reset Password",
                "description": "reset not logged in user password",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Pass Username or Email to reset password <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define User Predefined Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "send message for password reset instructions"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Register & Login"
                ],
                "summary": "Logout",
                "description": "Logout user by invalidationg his token",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to logout<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Logout"
                    }
                }
            }
        },
        "/sys-data": {
            "post": {
                "tags": [
                    "Register & Login"
                ],
                "summary": "System Data",
                "description": "Get system Data by language and type",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar<br/> <b>[Required]</b>",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "data retrieved depeding on type <br/> <b>Values: </b> [Individual, Entity, Event]",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Individual",
                            "Entity"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System Data"
                    }
                }
            }
        },
        "/awareness-center/": {
            "get": {
                "tags": [
                    "Awareness center"
                ],
                "summary": "List Awareness center quizes and surverys",
                "description": "List Awareness center quizes and surverys <br/> Quiz Categories can be retrieved from Setupdata",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user highest score and number of trials with each quiz <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter list of quizzes by category <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Published Quizzes"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/awareness-center/{quiz_id}": {
            "get": {
                "tags": [
                    "Awareness center"
                ],
                "summary": "Retrieve Quiz details",
                "description": "Retrieve Quiz details with list of questions, their answers, and hints with each question",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to show the quiz <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quiz_id",
                        "in": "path",
                        "description": "quiz_id used to retrieve quiz info <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Display Quiz Details and Questions"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/awareness-center/{quiz_id}/take": {
            "post": {
                "tags": [
                    "Awareness center"
                ],
                "summary": "Take single Quiz",
                "description": "User should be able to take and submit a single quiz",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to take the quiz <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quiz_id",
                        "in": "path",
                        "description": "quiz_id need to take the quiz with this ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "answers",
                        "in": "formData",
                        "description": "array of json objects that contains question_id and answer_id whcih is the id of the answer that the user provided<br/> <b>Values: </b> [{\"question_id\":1,\"answer_id\":1},{\"question_id\":1,\"answer_id\":1}]<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timer",
                        "in": "formData",
                        "description": "timer to complete the quiz, and timer is in seconds <br/> <b>Values: </b> 120<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submit Quiz Answers"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/awareness-center/quiz/result/{result_id}": {
            "get": {
                "tags": [
                    "Awareness center"
                ],
                "summary": "Retrieve Result details",
                "description": "Retrieve Result details By result id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to show user result <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "result_id",
                        "in": "path",
                        "description": "result_id used to retrieve quiz result <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Display Result Details"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List events",
                "description": "Return events in the system paginated",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "find_by_title",
                        "in": "query",
                        "description": "Search by Event Title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "find_by_date",
                        "in": "query",
                        "description": "Search by Event Date <br/> <b>Format:</b> yyyy-mm (year-month)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "no_of_events",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "listing event form"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Creates Event",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to create a new event<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define Event Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Event Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Event Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_type",
                        "in": "formData",
                        "description": "Event Type <br/><b>Validations: </b><br/> 1. Predefined Event's type in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_datetime",
                        "in": "formData",
                        "description": "Event Start Date (Data/time format should be 2016-03-27 00:00:00)<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end_datetime",
                        "in": "formData",
                        "description": "Event End Date (Data/time format should be 2016-03-27 00:00:00)<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue",
                        "in": "formData",
                        "description": "Venue Name <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>Values: </b> Any of predefined venues from setup data or ability to add new venue <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_address",
                        "in": "formData",
                        "description": "Venue Address <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required If adding new Venue]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_country",
                        "in": "formData",
                        "description": "Venue Country <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_city",
                        "in": "formData",
                        "description": "Venue City <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_phone",
                        "in": "formData",
                        "description": "Venue Phone <br/><b>Validations: </b><br/> 1. Valid phone format (numbers only)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_latitude",
                        "in": "formData",
                        "description": "Venue Latitude <br/><b>Validations: </b><br/> 1. Valid GeoLocation format <br/> <b>[Required If adding new Venue]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue_longitude",
                        "in": "formData",
                        "description": "Venue Longitude <br/><b>Validations: </b><br/> 1. Valid GeoLocation format <br/> <b>[Required If adding new Venue]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizer",
                        "in": "formData",
                        "description": "Organizer Name <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>Values: </b> Any of predefined venues from setup data or ability to add new venue <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizer_email",
                        "in": "formData",
                        "description": "Organizer email<br/><b>Validations</b><br/>1. Valid Email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizer_phone",
                        "in": "formData",
                        "description": "Organizer Phone <br/><b>Validations: </b><br/> 1. Valid phone format (numbers only)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_website",
                        "in": "formData",
                        "description": "Event Website <br/><b>Validations</b><br/>1. Valid URL",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Event Currency <br/> <b>Values:</b> <br/> 1.EGP<br/>2.USB<br/>3.EUR",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost",
                        "in": "formData",
                        "description": "Event Cost <br/><b>Validations: </b><br/> 1. Numeric Value<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "audience",
                        "in": "formData",
                        "description": "Event Audience <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "objectives",
                        "in": "formData",
                        "description": "Event Objectives <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prerequisites",
                        "in": "formData",
                        "description": "Event Prerequisites <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "functionality",
                        "in": "formData",
                        "description": "Event Functionality <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Event Theme <br/><b>Validations: </b><br/> 1. Predefined Theme in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Event Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "platform",
                        "in": "formData",
                        "description": "Event Platforms <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Event Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit user profile"
                    }
                }
            }
        },
        "/event/{eventId}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Finds an Event",
                "description": "Get event data according to the passed event id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending news if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View an event info"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/event/{eventId}/comments": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List Replies On Event Comment",
                "description": "list replies on the passed event",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID to list the comments related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to an Event"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Creates Event Comment",
                "description": " Add event comment to the event with the passed Id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "formData",
                        "description": "Event ID to post the comment on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/event/{eventId}/comments/{commentId}/replies": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Creates Reply On Event Comment",
                "description": "Add reply on the passed comment on the passed event",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "formData",
                        "description": "Event ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "Comment ID to post the reply on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reply to Comment"
                    }
                }
            }
        },
        "/event/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        },
        "/events/{event_id}": {
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Edits Event",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to edit an event<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "Event ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Event Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Event Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_type",
                        "in": "formData",
                        "description": "Event Type <br/><b>Validations: </b><br/> 1. Predefined Event's type in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_datetime",
                        "in": "formData",
                        "description": "Event Start Date (Data/time format should be 2016-03-27 00:00:00)<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end_datetime",
                        "in": "formData",
                        "description": "Event End Date (Data/time format should be 2016-03-27 00:00:00)<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "venue",
                        "in": "formData",
                        "description": "Venue ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizer",
                        "in": "formData",
                        "description": "Organizer ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "event_website",
                        "in": "formData",
                        "description": "Event Website <br/><b>Validations</b><br/>1. Valid URL",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Event Currency <br/> <b>Values:</b> <br/> 1.EGP<br/>2.USB<br/>3.EUR",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost",
                        "in": "formData",
                        "description": "Event Cost <br/><b>Validations: </b><br/> 1. Numeric Value<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "audience",
                        "in": "formData",
                        "description": "Event Audience <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "objectives",
                        "in": "formData",
                        "description": "Event Objectives <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prerequisites",
                        "in": "formData",
                        "description": "Event Prerequisites <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "functionality",
                        "in": "formData",
                        "description": "Event Functionality <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Event Theme <br/><b>Validations: </b><br/> 1. Predefined Theme in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Event Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "platform",
                        "in": "formData",
                        "description": "Event Platforms <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Event Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit user profile"
                    }
                }
            }
        },
        "/expert-thoughts": {
            "get": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "List expert thoughts",
                "description": "List expert thoughts with pagination",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfItems",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Expert thoughts"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "Creates New Expert Thought",
                "description": "Create a new expert thought with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to create a new expert thought<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_title",
                        "in": "formData",
                        "description": "Expert Thought Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_description",
                        "in": "formData",
                        "description": "Expert Thought Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_image",
                        "in": "formData",
                        "description": "Expert Thought Featured Image <br/><b>Validations: </b><br/> 1. Valid Image format",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Expert Thought Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "expert thought added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/expert-thoughts/{thought_id}": {
            "get": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "Finds an Expert Thought",
                "description": "Get Expert Thought data according to the passed Expert Thought id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending news if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thought_id",
                        "in": "path",
                        "description": "Expert Thought ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a Expert Thought info"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Expert Thought not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "Edits Expert Thought",
                "description": "Edit an expert thought with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to edit an expert thought<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thought_id",
                        "in": "path",
                        "description": "Expert Thought ID returned from list of Expert Thoughts<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_title",
                        "in": "formData",
                        "description": "Expert Thought Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_description",
                        "in": "formData",
                        "description": "Expert Thought Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_image",
                        "in": "formData",
                        "description": "Expert Thought Featured Image <br/><b>Validations: </b><br/> 1. Valid Image format <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Expert Thought Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "expert thought edited successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/expert-thoughts/{thought_id}/comments": {
            "get": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "List Comments and Replies On Expert Thought",
                "description": "list replies on the passed Expert Thought",
                "parameters": [
                    {
                        "name": "thought_id",
                        "in": "path",
                        "description": "Expert Thought ID to list the comments related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a Expert Thought"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "Creates Expert Thought Comment",
                "description": " Add Expert Thought comments with the thought id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thought_id",
                        "in": "formData",
                        "description": "Expert Thought ID to post the comment on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Expert Thought not found"
                    }
                }
            }
        },
        "/expert-thoughts/{thought_id}/comments/{commentId}/replies": {
            "post": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "Creates Reply On Expert Thought Comment",
                "description": "Add reply on the passed comment on the passed Expert Thought",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thought_id",
                        "in": "formData",
                        "description": "Expert Thought ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "Comment ID to post the reply on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reply to Comment"
                    }
                }
            }
        },
        "/expert-thoughts/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "Expert Thoughts"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Creates New Feedback",
                "description": "Create a new Feedback with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to submit a new feedback<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feedback_title",
                        "in": "formData",
                        "description": "Feedback Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feedback_description",
                        "in": "formData",
                        "description": "Feedback Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feedback_sections",
                        "in": "formData",
                        "description": "Feedback Section<br/> <b>Values: </b> any of provided sections from setup data or leave empty to select default value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Feedback Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/homepage": {
            "get": {
                "tags": [
                    "HomePage"
                ],
                "summary": "List news, events,succes stories",
                "description": "List success stories random, news 1 featured and latest news, and upcoming events",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Homepage Data"
                    }
                }
            }
        },
        "/market-place/services": {
            "post": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Creates New Service",
                "description": "Create a new service in the market place with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to create a new service<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define Service Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Service Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Theme <br/><b>Validations: </b><br/> 1. Predefined Theme in System <br/> <b>Values: </b> English or Arabic name or ID ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_category",
                        "in": "formData",
                        "description": "Category <br/><b>Validations: </b><br/> 1. Predefined Category in System <br/> <b>Values: </b> English or Arabic name or ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Service Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_image",
                        "in": "formData",
                        "description": "Service Featured Image <br/><b>Validations: </b><br/> 1. Valid Image",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "constraints",
                        "in": "formData",
                        "description": "Service Constraints <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditions",
                        "in": "formData",
                        "description": "Service Conditions <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Service Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Service Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/services/{service_id}": {
            "post": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Edits Service",
                "description": "Edits a service in the market place with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to edit a service<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "service ID returned from list market place services<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Service Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Theme <br/><b>Validations: </b><br/> 1. Predefined Theme in System <br/> <b>Values: </b> English or Arabic name or ID ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_category",
                        "in": "formData",
                        "description": "Category <br/><b>Validations: </b><br/> 1. Predefined Category in System <br/> <b>Values: </b> English or Arabic name or ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Service Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_image",
                        "in": "formData",
                        "description": "Service Featured Image <br/><b>Validations: </b><br/> 1. Valid Image",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "constraints",
                        "in": "formData",
                        "description": "Service Constraints <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditions",
                        "in": "formData",
                        "description": "Service Conditions <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Service Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Service Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Finds a service",
                "description": "Get service data according to the passed service id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending service if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Provide Service ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a service info"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/request": {
            "post": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Creates service request reply",
                "description": "Create a new service request reply with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to add response <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "service id to reply to <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thread_id",
                        "in": "formData",
                        "description": "required for Service Provider <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Respond Message <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service request reply added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/my/requests": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "List my service responses",
                "description": "List my service responses",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to list user responses <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Service ID to list its responses <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "threads list retrieved"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/archive": {
            "post": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Archive service",
                "description": "Archive service to prevent further responses",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to archive <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Service ID to archive <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "service archived successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/request/{thread_id}/archive": {
            "post": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Archive thread",
                "description": "Archive thread to prevent further messages",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to archive  thread<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thread_id",
                        "in": "path",
                        "description": "Thread ID to archive <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "thread archived successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/thread/{thread_id}": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Show a thread",
                "description": "Get thread messages according to the passed thread id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to get thread message <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thread_id",
                        "in": "path",
                        "description": "Provide Thread ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a thread messages"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Thread not found"
                    }
                }
            }
        },
        "/market-place": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "List services",
                "description": "List services",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfRequests",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter list of services by service category <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "query",
                        "description": "Filter list of services by technology <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "query",
                        "description": "Filter list of services by theme <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider Account Type <br/> <b>Values :</b> [Entity or Individual]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subtype",
                        "in": "query",
                        "description": "Provider Account Subtype <br/> <b>Values :</b> Sub-types in setup data",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Market place"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/review": {
            "post": {
                "tags": [
                    "Market Place"
                ],
                "summary": "Add service review",
                "description": "Review service so that I can express my opinion",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to add review <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Service ID to review <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rate",
                        "in": "formData",
                        "description": "Rate star <br/> <b>Values :</b>[0-5] <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "review",
                        "in": "formData",
                        "description": "Review Message <br/> <b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review saved successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/rate": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "View service average rate",
                "description": "View service total rate review",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Service ID to view service rate <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "review retrieved successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/reviews": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "list service reviews",
                "description": "List service reviews",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Service ID to review <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "review saved successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/service/{service_id}/review/{review_id}": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "View service review",
                "description": "View service single requester rate and review",
                "parameters": [
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "Service ID to review <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "review_id",
                        "in": "path",
                        "description": "Review ID to retrieve <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "review retrieved successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/top-services/": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "List Top 10 Services by rating",
                "description": "List Top 10 Services according to their ratings",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List top services successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/market-place/top-providers/": {
            "get": {
                "tags": [
                    "Market Place"
                ],
                "summary": "List Top 10 Providers",
                "description": "List Top 10 Providers according to their ratings ( get latest if number of top providers less than 4 )",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List top providers successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "List News",
                "description": "List News with ability to paginate and filter by news category",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfNews",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter list of news by category <br/> <b>Values: </b> ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List News"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Creates News",
                "description": "Create a new news with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to create a new news<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_title",
                        "in": "formData",
                        "description": "News Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_subtitle",
                        "in": "formData",
                        "description": "News Subtitle<br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_description",
                        "in": "formData",
                        "description": "News Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "News Category <br/><b>Validations: </b><br/> 1. Predefined Category in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_image",
                        "in": "formData",
                        "description": "News Featured Image <br/><b>Validations: </b><br/> 1. Valid Image format",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "News Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define News Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/news/{newsId}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Finds a News",
                "description": "Get news data according to the passed news id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending news if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newsId",
                        "in": "path",
                        "description": "News ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a news info"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "News not found"
                    }
                }
            }
        },
        "/news/{newsId}/comments": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "List Comments and Replies On News",
                "description": "list replies on the passed news",
                "parameters": [
                    {
                        "name": "newsId",
                        "in": "path",
                        "description": "News ID to list the comments related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a News"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Creates News Comment",
                "description": " Add news commnent to the news with the passed Id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newsId",
                        "in": "formData",
                        "description": "News ID to post the comment on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "News not found"
                    }
                }
            }
        },
        "/news/{newsId}/comments/{commentId}/replies": {
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Creates Reply On News Comment",
                "description": "Add reply on the passed comment on the passed news",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newsId",
                        "in": "formData",
                        "description": "News ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "Comment ID to post the reply on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reply to Comment"
                    }
                }
            }
        },
        "/news/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        },
        "/open-dataset": {
            "post": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "Creates New Open DataSet",
                "description": "Create a new open dataset with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to create a new dataset<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "open_dataset_title",
                        "in": "formData",
                        "description": "Open dataset Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "open_dataset_description",
                        "in": "formData",
                        "description": "Open dataset Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "publisher",
                        "in": "formData",
                        "description": "Open dataset Publisher <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resources",
                        "in": "formData",
                        "description": "Open dataset Resources <br/><b>Validations: </b><br/> 1. Resources should be one of the following extenstions [PDF,CSV,JSON,XML,HTML] <br/> <b>[Required]</b>",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Open dataset Type <br/><b>Validations: </b><br/> 1. Predefined Open dataset Type in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Open dataset Theme <br/><b>Validations: </b><br/> 1. Predefined theme in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "license",
                        "in": "formData",
                        "description": "Open dataset License <br/><b>Validations: </b><br/> 1. Predefined license in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "usage_hints",
                        "in": "formData",
                        "description": "Open dataset Usage Hints <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "references",
                        "in": "formData",
                        "description": "Open dataset References",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "link_to_source",
                        "in": "formData",
                        "description": "Open dataset Source Link <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Open dataset Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define Open dataset Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Open DataSet added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/open-datasets": {
            "get": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "List Open DataSets",
                "description": "List Open DataSets",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfDataSets",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter list of open dataset by type <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "query",
                        "description": "Filter list of open dataset by theme <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "license",
                        "in": "query",
                        "description": "Filter list of open dataset by license <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataset_format",
                        "in": "query",
                        "description": "Filter list of open dataset by resource format <br/> <b>Values: </b><br/> 1.pdf <br/>2.json <br/>3.csv <br/>4.xml <br/>5.html <br/>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Open DataSets"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/open-datasets/{dataset_id}": {
            "get": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "Find Open DataSet",
                "description": "View Open DataSet data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending news if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataset_id",
                        "in": "path",
                        "description": "Open Dataset ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Open Datasets"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/open-datasets/{dataset_id}/comments": {
            "get": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "List Comments and Replies On Open DataSet",
                "description": "list replies on the passed Open DataSet",
                "parameters": [
                    {
                        "name": "dataset_id",
                        "in": "path",
                        "description": "Open DataSet ID to list the comments related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a Open DataSet"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "Creates Open DataSet Comment",
                "description": " Add Open DataSet commnents with the dataset id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataset_id",
                        "in": "formData",
                        "description": "Open Dataset ID to post the comment on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Open Dataset not found"
                    }
                }
            }
        },
        "/open-datasets/{dataset_id}/comments/{commentId}/replies": {
            "post": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "Creates Reply On Open DataSet Comment",
                "description": "Add reply on the passed comment on the passed Open DataSet",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataset_id",
                        "in": "formData",
                        "description": "Dataset ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "Comment ID to post the reply on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reply to Comment"
                    }
                }
            }
        },
        "/open-datasets/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        },
        "/open-datasets/resources/{dataset_id}": {
            "post": {
                "tags": [
                    "Open DataSet"
                ],
                "summary": "Add resources to existing open dataset",
                "description": "Logged in user can add resources to existing open dataset",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to add new resources<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataset_id",
                        "in": "path",
                        "description": "Open Dataset ID returned from list datasets<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "open_dataset_description",
                        "in": "formData",
                        "description": "Resources Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resources",
                        "in": "formData",
                        "description": "Open dataset Resources <br/><b>Validations: </b><br/> 1. Resources should be one of the following extenstions [PDF,CSV,JSON,XML,HTML] <br/> <b>[Required]</b>",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add Open dataset resources Successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/post/attachment/{post_type}/{post_id}/{attachment_type}": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Upload an attachment to a specific post",
                "description": "Upload attachment to a specific post by post type and attachment type",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to add new attachment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_type",
                        "in": "path",
                        "description": "Type of the post<br/> <b>Values: </b> any of <br/> 1.news <br/>2.product<br/>3.success_story<br/>4.open_dataset<br/>5.service<br/>6.expert_thought<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "post_id",
                        "in": "path",
                        "description": "Post ID add attachment to<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "attachment_type",
                        "in": "path",
                        "description": "Attachment Type<br/> <b>Values: </b> any of <br/> 1.logo <br/>2.screenshot<br/>[attachment type can be screenshot with product type only,otherwise send logo]<br/><b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "attachment",
                        "in": "formData",
                        "description": "Attachment file to add<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload attachment successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Finds All Products",
                "description": "Return all products in the system paginated",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "products_count",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "industry",
                        "in": "query",
                        "description": "Filter list of products by industry <br/> <b>Values: </b> English or Arabic Name or word (featured) for editor's choice",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "license",
                        "in": "query",
                        "description": "Filter list of products by license <br/> <b>Values: </b> English Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "platform",
                        "in": "query",
                        "description": "Filter list of products by platform <br/> <b>Values: </b> English Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "query",
                        "description": "Filter list of products by technology <br/> <b>Values: </b> English Name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter list of products by type <br/> <b>Values: </b> English or Arabic Name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "listing product form"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Creates Product",
                "description": "Create a new product with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to create a new product<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Product Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Product Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Product Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "developer",
                        "in": "formData",
                        "description": "Product Developer",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "functionality",
                        "in": "formData",
                        "description": "Product Functionality <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "usage_hints",
                        "in": "formData",
                        "description": "Product Usage Hints <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "references",
                        "in": "formData",
                        "description": "Product References <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "link_to_source",
                        "in": "formData",
                        "description": " Product Link to Source <br/><b>Validations: </b><br/> 1.Valid Link",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "industry",
                        "in": "formData",
                        "description": "Product Industry <br/><b>Validations: </b><br/> 1. Predefined Industry in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Product Type <br/><b>Validations: </b><br/> 1. Predefined Product Types in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "platform",
                        "in": "formData",
                        "description": "Platforms <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "license",
                        "in": "formData",
                        "description": "Licenses <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo",
                        "in": "formData",
                        "description": "Product Logo <br/><b>Validations: </b><br/> 1.Valid Image",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "screenshots",
                        "in": "formData",
                        "description": "Product Screenshots <br/><b>Validations: </b><br/> 1.Valid Image",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Finds Product",
                "description": "Get product data according to the passed product name",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending product if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View product info"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Edits Product",
                "description": "Logged in user can edit product",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to edit a product<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "product ID returned from list products<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Product Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Product Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "developer",
                        "in": "formData",
                        "description": "Product Developer",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "functionality",
                        "in": "formData",
                        "description": "Product Functionality <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "usage_hints",
                        "in": "formData",
                        "description": "Product Usage Hints <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "references",
                        "in": "formData",
                        "description": "Product References <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "link_to_source",
                        "in": "formData",
                        "description": "Product Link to Source <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "industry",
                        "in": "formData",
                        "description": "Product Industry <br/><b>Validations: </b><br/> 1. Predefined Industry in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Product Type <br/><b>Validations: </b><br/> 1. Predefined Product Types in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "platform",
                        "in": "formData",
                        "description": "Platforms <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "license",
                        "in": "formData",
                        "description": "Licenses <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logo",
                        "in": "formData",
                        "description": "Product Logo <br/><b>Validations: </b><br/> 1.Valid Image",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "screenshots",
                        "in": "formData",
                        "description": "Product Screenshots <br/><b>Validations: </b><br/> 1.Valid Image",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Edited Successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/products/topTen": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Finds Top Ten Products",
                "description": "Return all Top Ten products in the system paginated",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfCategories",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "randomized",
                        "in": "query",
                        "description": "Randomization Option <br/> <b>Value:</b> 1 to randomize the result",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "listing top ten products"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/products/{productId}/comments": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "List Comments On Product Comment",
                "description": "list comments on the passed product",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product ID to list the comments related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and its replies to Product"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Creates Product Comment",
                "description": " Add product commnent to the product with the passed Id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productId",
                        "in": "formData",
                        "description": "Product ID to post the comment on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/products/{productId}/comments/{commentId}/replies": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Creates Reply On Product Comment",
                "description": "Add reply on the passed comment on the passed product",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productId",
                        "in": "formData",
                        "description": "Product ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "Comment ID to post the reply on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reply to Comment"
                    }
                }
            }
        },
        "/products/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        },
        "/products/{product_id}/contributors": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "List Product Contributors",
                "description": "list Product Contributors",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Prodcut ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Product Contributors ordering by number of updates"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/profiles/me/info": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Edits Profile Information",
                "description": "Edits profile information of the logged in user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to update user info<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sub_type",
                        "in": "formData",
                        "description": "Specify Sub-type <br/><b>Values:</b>One of predefined sub-types in system data<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "display_name",
                        "in": "formData",
                        "description": "Set Display Name <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "functionality",
                        "in": "formData",
                        "description": "Set User Functionality <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Set Profile Theme <br/><b>Values: <b> English or Arabic Name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ict_technology",
                        "in": "formData",
                        "description": "Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string",
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "address",
                        "in": "formData",
                        "description": "User address <br/><b>Validations: </b><br/> 1. Contains at least 1 character ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "description": "User Phone <br/><b>Validations: </b><br/> 1. Valid Phone format (numbers only)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "facebook_url",
                        "in": "formData",
                        "description": "Facebook URL <br/><b>Validations: </b><br/> 1. Valid Url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "twitter_url",
                        "in": "formData",
                        "description": "Twitter URL <br/><b>Validations: </b><br/> 1. Valid Url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "gplus_url",
                        "in": "formData",
                        "description": "Google+ URL <br/><b>Validations: </b><br/> 1. Valid Url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "linkedin_url",
                        "in": "formData",
                        "description": "LinkedIn URL <br/><b>Validations: </b><br/> 1. Valid Url",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interests",
                        "in": "formData",
                        "description": "Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact_name",
                        "in": "formData",
                        "description": "Contact Name in case of Entity Type <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact_email",
                        "in": "formData",
                        "description": "Contact Email in case of Entity Type<br/><b>Validations: </b><br/> 1. Valid Email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact_address",
                        "in": "formData",
                        "description": "Contact Address in case of Entity Type <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contact_phone",
                        "in": "formData",
                        "description": "Contact Phone in case of Entity Type <br/><b>Validations: </b><br/> 1. Valid Phone format (numbers only)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Editing user profile successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Profile not found"
                    }
                }
            }
        },
        "/profiles/me/pictures": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Changes Profile Picture",
                "description": "Change profile picture of the logged in user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to change user profile picture<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profile_photo",
                        "in": "formData",
                        "description": "User Profile Photo <br/><b>Validations: </b><br/> 1. Valid Image <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": " Profile Photo changed successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/{profileName}/info": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds Profile Info",
                "description": "Returns all profile information of the passed profile name",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user info",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Profile Data"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/passwords": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Changes Password",
                "description": "Change password for the logged in user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to change user password<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "current_password",
                        "in": "formData",
                        "description": "Current Password <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "new_password",
                        "in": "formData",
                        "description": "New Password to set <br/><b>Validations: </b><br/> 1. Length >= 8 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "repeat_password",
                        "in": "formData",
                        "description": "Repeat Password to confirm<br/><b>Validations: </b><br/> 1. Length >= 8 <br/> 2. Equal to Password <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit user profile"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/change-email": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Changes my Email",
                "description": "Change email for the logged in user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to change user email<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "current_password",
                        "in": "formData",
                        "description": "Current Password <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "new_email",
                        "in": "formData",
                        "description": "New Email to set <br/><b>Validations: </b><br/> 1. Valid Email <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit user profile"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/activities": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Creates Activity",
                "description": "Creates new activity for the logged in user, and the function returns the activity id ,success message and success code",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to post new status<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Post Content <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interests",
                        "in": "formData",
                        "description": "Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post update"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/activities/{id}": {
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Deletes Activity",
                "description": "Delete activity in the logged in user profile",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to delete an activity<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "Post Id to remove <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/activities/{id}/like": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Like Activity",
                "description": "Like activity in the logged in user profile",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to like an activity<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Remove Like Activity",
                "description": "Remove Like activity in the logged in user profile",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to remove like on activity<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/{profileName}/activities": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds Profile Activities",
                "description": "List profile activities with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile activities",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName to list other user profile activies",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfActivities",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Profile Activity"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/activities/{postActivityID}/comments": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Creates Comment on Profile Activity",
                "description": "Add new comment on a profile activity",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add comment on activity<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Post Comment <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "postActivityID",
                        "in": "formData",
                        "description": "ID of Activity <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer",
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post update"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/activities/{parentActivityID}/comments": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds All Comments of Profile Activity",
                "description": "List all comments of a profile activity",
                "parameters": [
                    {
                        "name": "parentActivityID",
                        "in": "path",
                        "description": "Comment ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Comment on profile Activity"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/activities/{parentActivityID}/comments/{commentID}/replies": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Creates Reply on Comment of Profile Activity",
                "description": "add reply on a comment on profile activity",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply on a comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "parentActivityID",
                        "in": "formData",
                        "description": "ID of Activity <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "ID of comment <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Add the reply content text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reply on comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/products/additions": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds Products Added by User",
                "description": "List products added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Products Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/products/edits": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds Contributed Products by User",
                "description": "List contributed products by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Contributed Products by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/notifications": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds Profiles Notifications",
                "description": "Get all profile notifications of a logged in user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user notification settings <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All notification settings"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Updates Profiles Notifications",
                "description": "Updates notifications",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to update user notification settings <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "notification_profile_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_products_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_events_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_news_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_success_stories_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_open_datasets_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_request_center_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_collaboration_center_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_expert_thoughts_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_awarness_center_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "notification_market_place_updates",
                        "in": "formData",
                        "description": "Daily,Weekly,Monthly or Never <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings Updated Successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/events": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds events Added by User",
                "description": "List events added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View events Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/news": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds news Added by User",
                "description": "List news added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View news Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/success-stories": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds success stories Added by User",
                "description": "List success stories added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View success stories Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/open-datasets": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds open datasets Added by User",
                "description": "List open datasets added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View open datasets Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/fosspedia/additions": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds fosspedia Added by User",
                "description": "List fosspedia added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View fosspedia Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/fosspedia/edits": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds fosspedia edited by User",
                "description": "List fosspedia edited by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View fosspedia edited by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/request-center/requests": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds requests Added by User",
                "description": "List requests added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View requests Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/me/request-center/responses": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds requests Added by User",
                "description": "List requests added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View responses Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/{profileName}/services": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds services Added by User",
                "description": "List services added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "language of the service, must be en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View requests Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/me/services/responses": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds service responses Added by User",
                "description": "List service responses added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "language of the service, must be en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View responses Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/me/quizzes/": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Lists quizzes taken by user",
                "description": "List quizzes taken by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Quizzes Taken by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/open-datasets/edits": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds Contributed Open Datasets Added by User",
                "description": "List Contributed Open Datasets added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View contributes Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/social-links": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieves user's social links",
                "description": "Returns all social links on success",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user social links",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve user social links"
                    }
                }
            },
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Links Social Account",
                "description": "link logged in user profile with social profile Id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "social media id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "provider",
                        "in": "formData",
                        "description": "Facebook, Twitter, LinkedIn, Google",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "photourl",
                        "in": "formData",
                        "description": "",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "linking successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Profile not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Unlinks Soicial Account",
                "description": "delete linking of the logged in user with the passed social account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "formData",
                        "description": "social media id",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "provider",
                        "in": "formData",
                        "description": "Facebook, Twitter, LinkedIn, Google",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "unlinking sucessfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Profile not found or social profile not found"
                    }
                }
            }
        },
        "/profiles/activities/{id}/likes": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieves activity's likes users list",
                "description": "Returns all users who like this activity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity Id <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve activity's likes users list"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieves users existing in the system",
                "description": "Returns all users in the system",
                "parameters": [
                    {
                        "name": "display_name",
                        "in": "query",
                        "description": "Set Display Name as filter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve activity's likes users list"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/expert-thoughts": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds expert thoughts Added by User",
                "description": "List expert thoughts added by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View expert thoughts Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/contributions/{profileName}/documents": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Finds published documents edited by User",
                "description": "List published documents edited by user with pagination",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list profile contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "number_per_page",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View documents Added by User"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profiles/me/social-login/resend-activation": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Resend activation email to current user through social login",
                "description": "Resend activation email to current user through social login",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to send activation link <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resend Email"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/profile/{profileName}/badges": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "List of badged achieved and locked for User",
                "description": "List of badged achieved and locked for User",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to list user badges",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName in case needed to retrieve other user contributions",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View User Badges"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Register & Login"
                ],
                "summary": "Register",
                "description": "Register new user",
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "Add Username to login with <br/> <b>Validations: </b><br/>1. Unique<br/>2.Contains characters, numbers and [.,_]<br/>3.Contains at least 1 character  <br/>4.Length > 4 and < 20 <br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "description": "Add Email to login with <b>Validations: </b><br/>1. Unique<br/>2.Valid Email <br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Add User Password to login with <br/><b>Validations: </b><br/>1. Length >= 8 <br/><b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "format": "password"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "Set User Type <br/> <b>Values:</b><br/> Individual or Entity<br/><b>[Required]</b>",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Individual",
                            "Entity"
                        ]
                    },
                    {
                        "name": "sub_type",
                        "in": "formData",
                        "description": "Select User Sub Type<br/> <b>Values:</b><br/> Any of predefined sub-types in setup data<br/><b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define User Predefined Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "registeration form"
                    }
                }
            }
        },
        "/request-center": {
            "get": {
                "tags": [
                    "Request center"
                ],
                "summary": "List Request center",
                "description": "List Request center",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfRequests",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter list of requests by type <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "query",
                        "description": "Filter list of requests by theme <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Filter list of requests by Target Relationship <br/> <b>Values: </b> English or Arabic name or ID ",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Request center"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Request center"
                ],
                "summary": "Creates request",
                "description": "Create a new request with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to create a new request<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define Request Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Request Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_center_type",
                        "in": "formData",
                        "description": "Request Types <br/><b>Validations: </b><br/> 1. Predefined Reqeust Types in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "target_business_relationship",
                        "in": "formData",
                        "description": "Business Relationship <br/><b>Validations: </b><br/> 1. Predefined Business Relationship in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Theme <br/><b>Validations: </b><br/> 1. Predefined Theme in System <br/> <b>Values: </b> English or Arabic name or ID ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Request Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "requirements",
                        "in": "formData",
                        "description": "Request Requirements <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "constraints",
                        "in": "formData",
                        "description": "Request Constraints <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Request Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Request Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deadline",
                        "in": "formData",
                        "description": "Request Deadline <br/><b>Format: </b> yyyy-mm-dd ex. 2016-05-05 <br/><b>Validations :</b><br/> 1. Should be today or after",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/request-center/{request_id}": {
            "get": {
                "tags": [
                    "Request center"
                ],
                "summary": "Finds a request",
                "description": "Get request data according to the passed request id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending request if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "description": "Provide Request ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a request info"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Request not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Request center"
                ],
                "summary": "Edit a request",
                "description": "Edit a request with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to edit a request<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "description": "request ID returned from list of requests <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "formData",
                        "description": "Request Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_center_type",
                        "in": "formData",
                        "description": "Request Types <br/><b>Validations: </b><br/> 1. Predefined Reqeust Types in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "target_business_relationship",
                        "in": "formData",
                        "description": "Business Relationship <br/><b>Validations: </b><br/> 1. Predefined Business Relationship in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "description": "Theme <br/><b>Validations: </b><br/> 1. Predefined Theme in System <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Request Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "requirements",
                        "in": "formData",
                        "description": "Request Requirements <br/><b>Validations: </b><br/> 1. Contains at least 1 character",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "constraints",
                        "in": "formData",
                        "description": "Request Constraints <br/><b>Validations: </b><br/> 1. Contains at least 1 character ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "technology",
                        "in": "formData",
                        "description": "Request Technologies <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Request Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deadline",
                        "in": "formData",
                        "description": "Request Deadline <br/><b>Format: </b> yyyy-mm-dd ex. 2016-05-05 <br/><b>Validations :</b><br/> 1. Should be today or after",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request edited successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/request-center/{request_id}/response": {
            "post": {
                "tags": [
                    "Request center"
                ],
                "summary": "Creates response",
                "description": "Create a new response with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to add response <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "description": "Request ID to respond to <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thread_id",
                        "in": "formData",
                        "description": "Required for request owner <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "Respond Message <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/request-center/{request_id}/my/responses": {
            "get": {
                "tags": [
                    "Request center"
                ],
                "summary": "List my request responses",
                "description": "List my request responses",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to list user responses <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "description": "Request ID to list its responses <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "threads list retrieved"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/request-center/{request_id}/archive": {
            "post": {
                "tags": [
                    "Request center"
                ],
                "summary": "Archive request",
                "description": "Archive request to prevent further responses",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to archive <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "request_id",
                        "in": "path",
                        "description": "Request ID to archive <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "request archived successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/request-center/response/{thread_id}/archive": {
            "post": {
                "tags": [
                    "Request center"
                ],
                "summary": "Archive thread",
                "description": "Archive thread to prevent further messages",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to archive  thread<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thread_id",
                        "in": "path",
                        "description": "Thread ID to archive <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "thread archived successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/request-center/thread/{thread_id}": {
            "get": {
                "tags": [
                    "Request center"
                ],
                "summary": "Show a thread",
                "description": "Get thread messages according to the passed thread id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token to get thread message <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thread_id",
                        "in": "path",
                        "description": "Provide Thread ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a thread messages"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Thread not found"
                    }
                }
            }
        },
        "/setupdata/industry": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Industries",
                "description": "List system industries with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Industries"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/theme": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Themes",
                "description": "List system Themes with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Themes"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/technology": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Technologies with ability to paginate or list all data",
                "description": "List system technologies with pagination",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Technologies"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/license": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Licenses",
                "description": "List system licenses with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Licenses"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/platform": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Platforms",
                "description": "List system platforms with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Platforms"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/subtypes": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Sub Types",
                "description": "Get Sub-types Data by language and type",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "data retrieved depeding on type <br/> <b>Values: </b> [Individual, Entity, Event]",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Individual",
                            "Entity",
                            "Event"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "System Data"
                    }
                }
            }
        },
        "/setupdata/open-dataset/type": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Open Dataset Types",
                "description": "List system open dataset types with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Open Dataset Types"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/open-dataset/license": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Open Dataset License",
                "description": "List system open dataset licenses with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Open Dataset Licenses"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/interests": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Interests",
                "description": "List system interests with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Interests"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/request-center/type": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System request center types",
                "description": "List system request center types with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Request Center Types"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/request-center/target-relationships": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System request center target relationships",
                "description": "List system request center target relationships with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Request Center Target relationships"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/news/category": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System News Categories",
                "description": "List system news categories with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View News Categories"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/success-story/category": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Success Stories Categories",
                "description": "List system success stories categories with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Success Stories Categories"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/services/category": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Services Categories",
                "description": "List system services categories with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Services Categories"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/sections": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System sections",
                "description": "List system sections",
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View system sections"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/quiz/category": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Quiz Categories",
                "description": "List system quiz categories with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Quiz Categories"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/type": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds System Types",
                "description": "List system types with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View Industries"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/event/venues": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds Event Venues",
                "description": "List event venues with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View event venues"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/setupdata/event/organizers": {
            "get": {
                "tags": [
                    "SetupData"
                ],
                "summary": "Finds Event Organizers",
                "description": "List event organizers with ability to paginate or list all data",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfData",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View event organizers"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/success-story": {
            "post": {
                "tags": [
                    "Success Story"
                ],
                "summary": "Creates New Success Story",
                "description": "Create a new success story with the passed data",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to create a new success story<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_title",
                        "in": "formData",
                        "description": "Success Story Title <br/> <b>Validations: </b><br/> 1. Length > 10 and < 100 <br/> 2. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_description",
                        "in": "formData",
                        "description": "Success Story Description <br/><b>Validations: </b><br/> 1. Contains at least 1 character <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "post_image",
                        "in": "formData",
                        "description": "Success Story Featured Image <br/><b>Validations: </b><br/> 1. Valid Image format",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "Success Story Category <br/><b>Validations: </b><br/> 1. Predefined Category in System <br/> <b>Values: </b> English or Arabic name or ID  <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "interest",
                        "in": "formData",
                        "description": "Success Story Interests <br/><b>Values: </b> Multiple values with comma seperated between each value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lang",
                        "in": "formData",
                        "description": "Define Success Story Language<br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Story added successfully"
                    },
                    "404": {
                        "description": "Not Logged in User"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/success-stories": {
            "get": {
                "tags": [
                    "Success Story"
                ],
                "summary": "List Success Stories",
                "description": "List Success Stories",
                "parameters": [
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfSuccessStories",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter list of success stories by category <br/> <b>Values: </b> English or Arabic name or ID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List Success Stories"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/success-story/{successId}": {
            "get": {
                "tags": [
                    "Success Story"
                ],
                "summary": "Finds a Success Story",
                "description": "Get success story data according to the passed success story id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "User token needed to display pending success story if exists",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "successId",
                        "in": "path",
                        "description": "Success Story ID to retrieve its details <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "data retrieved depending on language field <br/> <b>Values: </b> en or ar <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View a success story info"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Success Story not found"
                    }
                }
            }
        },
        "/success-story/{successId}/comments": {
            "get": {
                "tags": [
                    "Success Story"
                ],
                "summary": "List Comments and Replies On Success Story",
                "description": "list replies on the passed success stories",
                "parameters": [
                    {
                        "name": "successId",
                        "in": "path",
                        "description": "Success Story ID to list the comments related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfComments",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a success story"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Success Story"
                ],
                "summary": "Creates success story Comment",
                "description": " Add success story commnent to the success story with the passed Id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new comment<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "successId",
                        "in": "formData",
                        "description": "Success Story ID to post the comment on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Success story not found"
                    }
                }
            }
        },
        "/success-story/{successId}/comments/{commentId}/replies": {
            "post": {
                "tags": [
                    "Success Story"
                ],
                "summary": "Creates Reply On Success Story Comment",
                "description": "Add reply on the passed comment on the passed Success Story",
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "description": "User token needed to add new reply<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "Comment Text <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "successId",
                        "in": "formData",
                        "description": "Success Story ID <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "commentId",
                        "in": "formData",
                        "description": "Comment ID to post the reply on <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Add reply to Comment"
                    }
                }
            }
        },
        "/success-story/comments/{commentId}/replies": {
            "get": {
                "tags": [
                    "Success Story"
                ],
                "summary": "List Replies On a Comment",
                "description": "list replies on the passed comment",
                "parameters": [
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "Comment ID to list the replies related to this ID<br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "retrieve lists of data according to page number <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "numberOfReplies",
                        "in": "query",
                        "description": "Number of data to be retrieved with each page <br/> <b>Values: </b>  min 1 and max 25 <br/> <b>[Required]</b>",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List comments and replies to a comment"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Comments not found"
                    }
                }
            }
        }
    },
    "definitions": {

    }
}